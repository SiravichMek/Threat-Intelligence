# Input section for NGINX logs
input {
  file {
    path => "/home/mekky/Project/logs/preprocessed/nginx/*"  # Path to preprocessed NGINX log files
    start_position => "beginning"  # Read from the beginning only for the first time
    sincedb_path => "/home/mekky/Project/sincedb/nginx_sincedb"  # Persistent sincedb_path for NGINX logs
    type => "nginx_log"  # Set a type to differentiate logs
  }

  # Input section for MySQL logs
  file {
    path => "/home/mekky/Project/logs/preprocessed/mysql/*"  # Path to preprocessed MySQL log files
    start_position => "beginning"  # Read from the beginning only for the first time
    sincedb_path => "/home/mekky/Project/sincedb/mysql_sincedb"  # Persistent sincedb_path for MySQL logs
    type => "mysql_log"  # Set a type to differentiate logs
  }

  # Input section for Firewall (Syslog) logs
  file {
    path => "/home/mekky/Project/logs/preprocessed/firewall/*"  # Path to preprocessed firewall log files
    start_position => "beginning"  # Read from the beginning only for the first time
    sincedb_path => "/home/mekky/Project/sincedb/firewall_sincedb"  # Persistent sincedb_path for firewall logs
    type => "firewall_log"  # Set a type to differentiate logs
  }
}

# Filter section (optional) to process or tag logs if necessary
filter {
  if [type] == "nginx_log" {
    # Example: Add a tag for NGINX logs (optional)
    mutate { add_tag => ["nginx"] }
  }

  if [type] == "mysql_log" {
    # Example: Add a tag for MySQL logs (optional)
    mutate { add_tag => ["mysql"] }
  }

  if [type] == "firewall_log" {
    # Example: Add a tag for firewall logs (optional)
    mutate { add_tag => ["firewall"] }
  }
}

# Output section to handle different types of logs
output {
  # Combine all types into a single output
  tcp {
    host => "192.168.1.100"
    port => 5044
    codec => "line"  # Changed from json_lines to line
  }

  # Debugging output for all logs
  stdout { codec => rubydebug }  # Debugging output
}
